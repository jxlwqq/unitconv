package unitconv

import (
	"math"
	"testing"
)

func TestArea(t *testing.T) {
	tests := []struct {
		fromValue float64
		fromUnit  int
		toUnit    int
		want      float64
	}{
		{1, SquareMeter, SquareMeter, 1},
		{1, SquareMeter, SquareKilometer, 0.000001},
		{1, SquareMeter, SquareCentimeter, 10000},
		{1, SquareMeter, SquareMillimeter, 1000000},
		{1, SquareMeter, SquareMicrometer, 1000000000000},
		{1, SquareMeter, Hectare, 0.0001},
		{1, SquareMeter, SquareMile, 3.861018768e-7},
		{1, SquareMeter, SquareYard, 1.1959900463},
		{1, SquareMeter, SquareFoot, 10.763910417},
		{1, SquareMeter, SquareInch, 1550.0031},
		{1, SquareMeter, Acre, 0.0002471054},
		{1, SquareKilometer, SquareMeter, 1000000},
		{1, SquareKilometer, SquareKilometer, 1},
		{1, SquareKilometer, SquareCentimeter, 10000000000},
		{1, SquareKilometer, SquareMillimeter, 1000000000000},
		{1, SquareKilometer, SquareMicrometer, 1000000000000000000},
		{1, SquareKilometer, Hectare, 100},
		{1, SquareKilometer, SquareMile, 0.3861018768},
		{1, SquareKilometer, SquareYard, 1195990.0463},
		{1, SquareKilometer, SquareFoot, 10763915.051182},
		{1, SquareKilometer, SquareInch, 1550003100},
		{1, SquareKilometer, Acre, 247.10538147},
		{1, SquareCentimeter, SquareMeter, 0.0001},
		{1, SquareCentimeter, SquareKilometer, 1.e-10},
		{1, SquareCentimeter, SquareCentimeter, 1},
		{1, SquareCentimeter, SquareMillimeter, 100},
		{1, SquareCentimeter, SquareMicrometer, 100000000},
		{1, SquareCentimeter, Hectare, 1.e-8},
		{1, SquareCentimeter, SquareMile, 3.861018768e-11},
		{1, SquareCentimeter, SquareYard, 0.000119599},
		{1, SquareCentimeter, SquareFoot, 0.001076391},
		{1, SquareCentimeter, SquareInch, 0.15500031},
		{1, SquareCentimeter, Acre, 2.471053814e-8},
		{1, SquareMillimeter, SquareMeter, 0.000001},
		{1, SquareMillimeter, SquareKilometer, 1.e-12},
		{1, SquareMillimeter, SquareCentimeter, 0.01},
		{1, SquareMillimeter, SquareMillimeter, 1},
		{1, SquareMillimeter, SquareMicrometer, 1000000},
		{1, SquareMillimeter, Hectare, 1e-10},
		{1, SquareMillimeter, SquareMile, 3.861018768e-13},
		{1, SquareMillimeter, SquareYard, 0.000001196},
		{1, SquareMillimeter, SquareFoot, 0.0000107639},
		{1, SquareMillimeter, SquareInch, 0.0015500031},
		{1, SquareMillimeter, Acre, 2.471053814e-10},
		{1, SquareMicrometer, SquareMeter, 1.e-12},
		{1, SquareMicrometer, SquareKilometer, 1.e-18},
		{1, SquareMicrometer, SquareCentimeter, 1e-8},
		{1, SquareMicrometer, SquareMillimeter, 0.000001},
		{1, SquareMicrometer, SquareMicrometer, 1},
		{1, SquareMicrometer, Hectare, 1.e-16},
		{1, SquareMicrometer, SquareMile, 3.861018768e-19},
		{1, SquareMicrometer, SquareYard, 1.195990046e-12},
		{1, SquareMicrometer, SquareFoot, 1.076391041e-11},
		{1, SquareMicrometer, SquareInch, 1.5500031e-9},
		{1, SquareMicrometer, Acre, 2.471053814e-16},
		{1, Hectare, SquareMeter, 10000},
		{1, Hectare, SquareKilometer, 0.01},
		{1, Hectare, SquareCentimeter, 100000000},
		{1, Hectare, SquareMillimeter, 10000000000},
		{1, Hectare, SquareMicrometer, 10000000000000000},
		{1, Hectare, Hectare, 1},
		{1, Hectare, SquareMile, 0.0038610188},
		{1, Hectare, SquareYard, 11959.900463},
		{1, Hectare, SquareFoot, 107639.150512},
		{1, Hectare, SquareInch, 15500031},
		{1, Hectare, Acre, 2.4710538147},
		{1, SquareMile, SquareMeter, 2589990},
		{1, SquareMile, SquareKilometer, 2.58999},
		{1, SquareMile, SquareCentimeter, 25899900000},
		{1, SquareMile, SquareMillimeter, 2589990000000},
		{1, SquareMile, SquareMicrometer, 2589990000000000000},
		{1, SquareMile, Hectare, 258.999},
		{1, SquareMile, SquareMile, 1},
		{1, SquareMile, SquareYard, 3097602.26},
		{1, SquareMile, SquareFoot, 27878432.343412},
		{1, SquareMile, SquareInch, 4014492528.985058},
		{1, SquareMile, Acre, 640.00046695},
		{1, SquareYard, SquareMeter, 0.83612736},
		{1, SquareYard, SquareKilometer, 8.3612736e-7},
		{1, SquareYard, SquareCentimeter, 8361.2736},
		{1, SquareYard, SquareMillimeter, 836127.36},
		{1, SquareYard, SquareMicrometer, 836127360000},
		{1, SquareYard, Hectare, 0.0000836127},
		{1, SquareYard, SquareMile, 3.228303429e-7},
		{1, SquareYard, SquareYard, 1},
		{1, SquareYard, SquareFoot, 9},
		{1, SquareYard, SquareInch, 1296},
		{1, SquareYard, Acre, 0.0002066116},
		{1, SquareFoot, SquareMeter, 0.09290304},
		{1, SquareFoot, SquareKilometer, 9.290304e-8},
		{1, SquareFoot, SquareCentimeter, 929.0304},
		{1, SquareFoot, SquareMillimeter, 92903},
		{1, SquareFoot, SquareMicrometer, 92903000000},
		{1, SquareFoot, Hectare, 0.0000092903},
		{1, SquareFoot, SquareMile, 3.58700381e-8},
		{1, SquareFoot, SquareYard, 0.1111111111},
		{1, SquareFoot, SquareFoot, 1},
		{1, SquareFoot, SquareInch, 144},
		{1, SquareFoot, Acre, 0.0000229568},
		{1, SquareInch, SquareMeter, 0.00064516},
		{1, SquareInch, SquareKilometer, 6.4516e-10},
		{1, SquareInch, SquareCentimeter, 6.4516},
		{1, SquareInch, SquareMillimeter, 645.16},
		{1, SquareInch, SquareMicrometer, 645160000},
		{1, SquareInch, Hectare, 6.4516e-8},
		{1, SquareInch, SquareMile, 2.490974868e-10},
		{1, SquareInch, SquareYard, 0.0007716049},
		{1, SquareInch, SquareFoot, 0.0069444444},
		{1, SquareInch, SquareInch, 1},
		{1, SquareInch, Acre, 1.594225079e-7},
		{1, Acre, SquareMeter, 4046.8564224},
		{1, Acre, SquareKilometer, 0.0040468564},
		{1, Acre, SquareCentimeter, 40468564.224},
		{1, Acre, SquareMillimeter, 4046856422.4},
		{1, Acre, SquareMicrometer, 4046856422400000},
		{1, Acre, Hectare, 0.4046856422},
		{1, Acre, SquareMile, 0.0015624989},
		{1, Acre, SquareYard, 4840},
		{1, Acre, SquareFoot, 43560.018755},
		{1, Acre, SquareInch, 6272640},
		{1, Acre, Acre, 1},
	}
	for _, test := range tests {
		conv := NewArea(test.fromValue, test.fromUnit)
		got, _ := conv.GetToValue(test.toUnit)
		if diff := math.Abs(got - test.want); diff > 0.01 {
			t.Errorf("got %f != want %f", got, test.want)
		}
	}
}
